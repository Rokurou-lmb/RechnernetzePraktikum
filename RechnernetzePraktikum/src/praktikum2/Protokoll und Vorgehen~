Verbindungsaufbau zwischen Client & Server:

//Verbindug Ã¼ber TCP-Sockets wurde auf Port 50000 aufgebaut

S: NICKNAME?
C: NICKNAME <NICKNAME> (Has to match "\w*")
S: ACCEPTED, CONNECTED AS <NICKNAME> / REFUSED ERRORCODE <NICKNAME_REFUSAL_CODE>(->6)

Bevor eine erfolgreiche Verbindung aufgebaut wurde kann die Verbindung durch einen "kurzen" Timeout beendet werden.
Bei Nickname-Refusal erwartet der Server einen neuen Nicknamen.
NICKNAME_REFUSAL_CODE: 42 - Name already taken 
		1337 - Name not allowed
Der Client wird in die Verteilerliste aufgenommen und sein Nickname hinterlegt.


-----------------------------------------------------------------------------------

Verbindungsabbau zwischen Client & Server

C: QUIT
S: GOODBYE, RELEASING <NICKNAME>

Client wird aus der Verteilerliste des Servers entfernt und sein Nickname wird wieder aus dem Mapping entfernt

-----------------------------------------------------------------------------------

Nachrichtenaustausch vom Client zum Server

C: MESSAGE
S: OK
C: TIMESTAMP <TIMESTAMP> (expects a long, not really checked right now)
C: DATA <MESSAGE_DATA> (*As long as the following messages start with DATA they're interpreted as part of the MESSAGE_DATA, MESSAGE_DATA is plain Text)
C: FINISHED
S: MESSAGE ACCEPTED / MESSAGE_REFUSED <MESSAGE_REFUSAL_CODE>

MESSAGE_REFUSAL_CODE: 7 - Timestamp invalid

Nachricht wird vom Server an alle Clients in der Verteilerliste versendet

-----------------------------------------------------------------------------------

Nachrichtenaustausch vom Server zum Client

S: MESSAGE
C: OK
S: NICKNAME <NICKNAME>
S: TIMESTAMP <TIMESTAMP> (expects a long, not really checked right now)
S: DATA <MESSAGE DATA>
S: FINISHED
C: MESSAGE ACCEPTED

Nachricht wird vom Client im ChatFenster dargestellt.

-----------------------------------------------------------------------------------

Benutzerabfrage vom Client an den Server

C: USER?
S: USER <NICKNAME>(,<NICKNAME>)*
S: FINISHED
C: USERLIST ACCEPTED

Nutzer werden im ChatFenster ausgegeben